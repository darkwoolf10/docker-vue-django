version: '3'

services:

  traefik:
    image: traefik
    container_name: "traefik-dev"
    command: --api --docker
    volumes:
      - ./traefik/dev/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "443:443"
      - "80:80"
      - "8070:8080"
    networks:
      - main

  db:
    container_name: "db-dev"
    image: postgres
    networks:
      - main
    volumes:
      - pg-data-dev:/var/lib/postgresql/data

  backend:
    container_name: "backend-dev"
    build: ./backend
    command: /start_dev.sh
    volumes:
      - ./backend:/code
      - django-static-dev:/code/static
    ports:
      - "8000:8000"
    networks:
      - main
    environment:
      - DEBUG=True
      - VUE_APP_DEMO_PASSWORD=${VUE_APP_DEMO_PASSWORD}
    depends_on:
      - db

  frontend:
    container_name: "frontend-dev"
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app/:ro
      - /app/node_modules
    stdin_open: true
    tty: true
    ports:
      - "8080:8080"
    networks:
      - main
    depends_on:
      - backend
      - db
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=100
      - YOUR_APP_WEB_HTTP_PORT=8080

  nginx:
    container_name: "nginx-dev"
    build:
      context: .
      dockerfile: nginx/dev/Dockerfile
    depends_on:
      - backend
      - frontend
      - flower
    volumes:
      - ./nginx/dev/dev.conf:/etc/nginx/nginx.conf:ro
      - django-static-dev:/usr/src/app/static
    networks:
      - main
    labels:
      - "traefik.backend=nginx"
      - "traefik.frontend.rule=PathPrefix: /"
      - traefik.docker.network=main
      - traefik.port=80

  redis:
    image: redis:alpine
    container_name: "redis-dev"
    networks:
      - main

  celery:
    build: ./backend
    container_name: "celery-dev"
    command: bash -c 'python3 manage.py watch_celery'
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
    networks:
      - main

  flower:
    image: mher/flower
    container_name: "flower-dev"
    command: "--url_prefix=flower --basic_auth=${FLOWER_USERNAME}:${FLOWER_PASSWORD}"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
    networks:
      - main
    depends_on:
      - celery
      - redis

  portainer:
    image: portainer/portainer
    container_name: "portainer-dev"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - main

volumes:
  django-static-dev:
  portainer-data:
  pg-data-dev:

networks:
  main:
    driver: bridge
